load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ppx_archive",
    "ppx_module",
    "ppx_ns_library",
)

# load("@obazl_rules_ocaml//ocaml:macros.bzl", "ns_env")
# ns_env(aliases = glob(["*.ml"]))

################################################################
## PPX STANZA 1: PPX_OPTCOMP
################################################################
PPX_OPTCOMP_OPAM_DEPS = [
    "compiler-libs.common",
    "base",
    "ppxlib",
    "stdio",
]

# ###########
ppx_module(
    name = "ppx_optcomp",
    struct = "ppx_optcomp.ml",
    deps = [
        "Cparser",
        "Interpreter",
        "Token",
    ],
    deps_opam = PPX_OPTCOMP_OPAM_DEPS,
    visibility = ["//visibility:public"]
)

# ############
# ppx_archive(
#     name = "ppx_optcomp",
#     opts = [],
#     visibility = ["//visibility:public"],
#     deps = PPX_OPTCOMP_DEPS + [
#         # do not sort (buildifier)
#         ":Cparser",
#         ":Interpreter",
#         ":Ppx_optcomp",
#         ":Token",
#     ],
# )

#########
# ppx_ns_library(
#     name = "ppx_optcomp",
#     main = "ppx_optcomp.ml",
#     submodules = {
#         ":Cparser": "Cparser",
#         ":Interpreter": "Interpreter",
#         # ":Ppx_optcomp": "Ppx_optcomp",
#         ":Token": "Token"
#     },
#     # deps_opam = PPX_OPTCOMP_OPAM_DEPS
# )

###########
ppx_module(
    name = "Cparser",
    struct = "cparser.ml",
    deps = [
        "Token",
    ],
    deps_opam = PPX_OPTCOMP_OPAM_DEPS
)

###########
ppx_module(
    name = "Interpreter",
    struct = "interpreter.ml",
    deps_opam = PPX_OPTCOMP_OPAM_DEPS
)

###########
ppx_module(
    name = "Token",
    struct = "token.ml",
    deps_opam = PPX_OPTCOMP_OPAM_DEPS
)
